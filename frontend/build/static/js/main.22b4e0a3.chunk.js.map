{"version":3,"sources":["session.ts","components/SharedStyles.tsx","components/Header.tsx","App.tsx","public.ts","load.tsx","search.tsx","serviceWorker.js","index.tsx"],"names":["clearSession","localStorage","removeItem","isSessionValid","expiry","getItem","Date","styleToolbar","background","height","paddingRight","styles","styleButton","margin","fontWeight","padding","border","borderStyle","borderRadius","backgroundColor","niceColors","style","transition","color","$nest","&:hover","MyLoad","props","react","react_router_dom","Object","assign","to","MySearch","Header","index_es","container","direction","justify","alignItems","item","sm","xs","paddingTop","textAlign","component","className","variant","App","state","email","password","isRequesting","isLoggedIn","error","handleLogin","_callee","regenerator_default","a","wrap","_context","prev","next","_this","setState","stop","logout","session","getTestData","_callee2","_context2","this","components_Header","name","content","_this2","disabled","onClick","placeholder","type","onChange","e","target","value","React","port","process","PORT","ROOT_URL","concat","sendRequest","path","options","headers","response","data","_args","arguments","length","undefined","Content-type","console","log","fetch","encodeURI","method","credentials","sent","json","Error","abrupt","getList","_getList","apply","getLoadDate","_getLoadDate","_callee3","_context3","getContacts","_x2","_getContacts","_callee4","asSearchStrings","sQuery","i","_context4","timerId","bRefining","FileInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fileInput","timeCounter","names","handleSubmit","bind","assertThisInitialized","socket","socketIOClient","on","jsonRcvd","JSON","parse","something","oName","id","GivenName","FamilyName","push","close","window","clearInterval","prevState","objectSpread","event","_this3","preventDefault","formData","FormData","fname","current","files","append","bClearDB","toString","bClearCats","indexOf","setInterval","body","then","text","string","react_default","createElement","onSubmit","width","accept","ref","tableData","reactable","column","map","x","Component","Load","_React$Component2","_this4","handleInputChange","checked","defineProperty","date","inherits","createClass","key","_componentDidMount2","asyncToGenerator","mark","t0","buttonStyle","load_FileInput","OSearch","sSearch","asSelect","bNext","bAnd","bSearch","sSubCatOf","iCatSearches","bComplete","aoCatsList","sCat","bAllowMult","iCatSearchesMax","backStyle","bottom","left","right","maxWidth","maxHeight","modalStyle","minHeight","tableStyle","verticalAlign","display","boxStyle","aiCatsSelected","aoSearch","aoFoundNames","iTotalRows","columns","Search","_React$Component","catAddSelect","iRow","filter","o","selected","andButton","param","iCounter","nextButton","join","searchButton","list","loading","sAddCat","aoFound","iPersonShow","iPerson","FC_ID1","href","url","alt","src","Photo1","index","react_data_grid_default","minWidth","rowGetter","rowsCount","enableCellSelect","onCellSelected","rowSel","rowIdx","_componentDidMount","_searchButton","asSearch","aoContacts","_i","j","aoCats","sIsSubCatOf","sort","b","sThisCat","aoFoundPeople","FC_ID2","oSrch","index1","size","multiple","value2","index2","NameTable","ModalBox","csr","Boolean","location","hostname","match","ReactDOM","react_router","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22b4e0a3.chunk.js","sourcesContent":["// Set the session in the local storage\nexport const setSession = (token: string, expiry: string): void => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('expiry', expiry);\n};\n\n// Clear the session from the local storage\nexport const clearSession = (): void => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expiry');\n};\n\n// Checks if the session is valid (locally) according to the expiration time\nexport const isSessionValid = (): boolean => {\n  const expiry = localStorage.getItem('expiry');\n  if (expiry) {\n    return +new Date(expiry) > +new Date();\n  }\n  return false;\n};\n\n// Creates the authorization header using the bearer token\nexport const getAuthHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem('token')}`\n});\n","export const styleBigAvatar = {\r\n  width: '80px',\r\n  height: '80px',\r\n  margin: '0px auto 15px',\r\n\r\n};\r\n\r\nexport const styleRaisedButton = {\r\n  margin: '15px 15px 30px 15px',\r\n  font: '15px Muli',\r\n};\r\n\r\nexport const styleToolbar = {\r\n  background: '#FFF',\r\n  height: '64px',\r\n  paddingRight: '20px',\r\n};\r\n\r\nexport const styleLoginButton = {\r\n  borderRadius: '2px',\r\n  textTransform: 'none',\r\n  font: '16px Muli',\r\n  fontWeight: '400',\r\n  letterSpacing: '0.01em',\r\n  color: 'white',\r\n  backgroundColor: '#DF4930',\r\n};\r\n\r\nexport const styleTextField = {\r\n  font: '15px Muli',\r\n  color: '#222',\r\n  fontWeight: '300',\r\n};\r\n\r\nexport const styleForm = {\r\n  margin: '7% auto',\r\n  width: '360px',\r\n};\r\n\r\nexport const styleGrid = {\r\n  margin: '0px auto',\r\n  font: '16px Muli',\r\n  color: '#222',\r\n  fontWeight: '300',\r\n  lineHeight: '1.5em',\r\n};\r\n\r\n","import * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Toolbar} from '@material-ui/core';\nimport {Grid} from '@material-ui/core';\nimport {Button} from '@material-ui/core';\nimport { styleToolbar } from './SharedStyles';\nimport '../index.css';\nimport {style} from \"typestyle\";\n\n//import styled from 'styled-components';\n\n//const Button = styled.button`\n//  &:hover {\n//    background:teal;\n//  }\n//`;\n\n//    color: 'black',\n//    \"&:hover\": {\n//      color: 'white'\n//    }\n\nconst styles: {styleButton: {}} = {\n styleButton: {\n    margin: '0px 50px 10px auto',\n    fontWeight: '800',\n    padding: '5px',\n    border: '#1565C0',\n    borderStyle: 'solid',\n    borderRadius: '10%',\n    backgroundColor: '#EA9A40',\n }\n};\n\n\n/** convert a style object to a CSS class name */\nconst niceColors = style({\n  transition: 'color .2s',\n  color: 'black',\n  $nest: {\n    '&:hover': {\n      color: 'white'\n    }\n  }\n});\n\n//<h1 className={niceColors}>Hello world</h1>\nconst MyLoad = (props: any) => <Link to=\"/load\" {...props} />\nconst MySearch =  (props: any) => <Link to=\"/search\" {...props} />\nfunction Header() {\n  return (\n    <div>\n      <Toolbar style={styleToolbar}>\n        <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n          <Grid item sm={9} xs={8} style={{ paddingTop: '20px', textAlign: 'center' }}>\n          <Button component={MyLoad} className={niceColors}\n             variant='contained' style={styles.styleButton}>Load</Button>\n          <Button component = {MySearch} className={niceColors}\n           variant='contained' style={styles.styleButton}>Search</Button>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </div>\n  );\n}\n\nexport default Header;\n","//import axios from \"axios\";\nimport * as React from 'react';\nimport './App.css';\nimport * as session from './session';\n//import logo from './logo.svg';\nimport Header from './components/Header';\n//import bodyBkgd from './oriental.png';\n\nexport interface AppState {\n  email: string;\n  password: string;\n  isRequesting: boolean;\n  isLoggedIn: boolean;\n  //data: App.Item[];\n  error: string;\n}\n\nclass App extends React.Component<{}, AppState> {\n  public state = {\n    email: \"\",\n    password: \"\",\n    isRequesting: false,\n    isLoggedIn: false,\n    //data: [],\n    error: \"\"\n  };\n\n  public componentDidMount() {\n    this.setState({ isLoggedIn: session.isSessionValid() });\n  }\n\n//      <div className=\"App\">\n//      <div style={{ padding: '10px 45px' }}>\n\n  public render() {\n    return (\n      <div>\n            <Header/>\n            <title>Prodigium</title>\n            <meta name=\"description\" content=\"\" />\n          <h1>Prodigium Contact Search</h1>\n        </div>\n      );\n  }\n\n  private notUsed() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header>\n        <div className=\"App-error\">{this.state.error}</div>\n        {this.state.isLoggedIn ? (\n          <div className=\"App-private\">\n            <div>\n              Server test data:\n            </div>\n            <button disabled={this.state.isRequesting} onClick={this.getTestData}>Get test data</button>\n            <button disabled={this.state.isRequesting} onClick={this.logout}>Log out</button>\n          </div>\n        ) : (\n          <div className=\"App-login\">\n            (try the credentials: testuser@email.com / my-password)\n            <input\n              disabled={this.state.isRequesting}\n              placeholder=\"email\"\n              type=\"text\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ email: e.target.value })}\n            />\n            <input\n              disabled={this.state.isRequesting}\n              placeholder=\"password\"\n              type=\"password\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ password: e.target.value })}\n            />\n            <button disabled={this.state.isRequesting} onClick={this.handleLogin}>Log in</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n//  const response = await axios.post<{ token: string; expiry: string }>(\"/api/users/login\", { email, password });\n//  const { token, expiry } = response.data;\n//  session.setSession(token, expiry);\n\n  private handleLogin = async (): Promise<void> => {\n    //const { email, password } = this.state;\n    try {\n      this.setState({ error: \"\" });\n      this.setState({ isRequesting: true });\n      this.setState({ isLoggedIn: true });\n    } catch (error) {\n      this.setState({ error: \"Something went wrong\" });\n    } finally {\n      this.setState({ isRequesting: false });\n    }\n  };\n\n  private logout = (): void => {\n    session.clearSession();\n    this.setState({ isLoggedIn: false });\n  };\n\n  private getTestData = async (): Promise<void> => {\n    try {\n      this.setState({ error: \"\" });\n    } catch (error) {\n      this.setState({ error: \"Something went wrong\" });\n    } finally {\n      this.setState({ isRequesting: false });\n    }\n  }\n}\n\nexport default App;\n","import 'isomorphic-fetch';\n\nconst dev = true;\n//const dev = process.env.NODE_ENV !== 'production';\nconst port = process.env.PORT || 3300;\nconst ROOT_URL = dev ? `http://localhost:${port}` : 'http://tobycontacts.ddns.net/cnext';\n//const ROOT_URL = '';\nconsole.log (`NODE_ENV: ${process.env.NODE_ENV} dev: ${dev}`);\n\nasync function sendRequest(path: string, options = {}) {\n  const headers = {\n    'Content-type': 'application/json; charset=UTF-8',\n  };\n\n  console.log (`sR: ${ROOT_URL}${path}`);\n  const response = await fetch(\n    encodeURI (`${ROOT_URL}${path}`),\n    Object.assign({\n      method: 'POST',\n      credentials: 'include'\n    }, {\n      headers\n    }, options)\n  );\n\n  const data = await response.json();\n\n  if (data.error) {\n    throw new Error(data.error);\n  }\n  console.log(\"sR got data: \", data);\n  return data;\n}\n\nexport async function getList () {\n  console.log (\"getList: /categories\");\n  return await sendRequest('/categories', {\n    method: 'GET',\n  });\n}\n\nexport async function getLoadDate () {\n  console.log (\"getLoadDate\");\n  return await sendRequest('/loadDate', {\n    method: 'GET',\n  });\n}\n\nexport async function getContacts (asSearchStrings: string[]) {\n  console.log (\"getContacts: /contacts\");\n  let sQuery = '';\n  let i;\n  console.log ('asSS: ', asSearchStrings);\n  for (i = 0; i < asSearchStrings.length - 1; i++) {\n    console.log ('string build: ', i, asSearchStrings[i]);\n    sQuery += asSearchStrings[i];\n    sQuery += '@';\n  }\n  sQuery += asSearchStrings[i];\n  console.log ('string finish: ', i, asSearchStrings[i]);\n  \n  return await sendRequest(`/contacts?q=${sQuery}`, {\n//    body: JSON.stringify ({'search': asSearchStrings}),\n    method: 'GET'\n  });\n}","import React from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport {Table, Thead, Th, Tr,Td} from 'reactable';\r\nimport { getLoadDate } from './public';\r\nimport Header from './components/Header';\r\n\r\nlet aoCats: {} = [];\r\nlet timerId: number;\r\n\r\ntype OMod = {\r\n  id: number,\r\n  GivenName: string,\r\n  FamilyName: string,\r\n  \"E-mail1-Value\": string\r\n};\r\n\r\nexport function getCats () {\r\n  return (aoCats);\r\n}\r\n/*\r\ninterface Props {\r\n  tableData: OMod[];\r\n}\r\n*/\r\nfunction MyTable (tableData: {GivenName: string, FamilyName: string} []) {\r\n//class MyTable extends React.Component<{tableData: OMod[]}> {\r\n//  render() {\r\n    return (<Table className = \"table\">\r\n           <Thead>\r\n          <Th column=\"firstName\">\r\n            <strong className=\"name-header\">First Name</strong>\r\n          </Th>\r\n          <Th column=\"lastName\">\r\n            <strong className=\"name-header\">Last Name</strong>\r\n          </Th>\r\n        </Thead>\r\n        {tableData.map(x=><Tr> <Td column=\"firstName\">{x.GivenName}</Td> <Td column=\"lastName\">{x.FamilyName}</Td></Tr>)}\r\n      </Table>\r\n    );\r\n  }\r\n//}\r\n\r\ntype FIProps = {\r\n  bClearDB: boolean,\r\n  bClearCats: boolean\r\n}\r\ntype FIState = {\r\n  timeCounter: number,\r\n  response: boolean\r\n}\r\n\r\ntype MyData = {\r\n  something: string;\r\n}\r\n\r\ntype myJson = {\r\n  GivenName: string,\r\n  FamilyName: string\r\n}\r\n\r\nclass FileInput extends React.Component<FIProps, FIState> {\r\n  fileInput: any;\r\n  timeCounter: number;\r\n  names: OMod[];\r\n  state: FIState;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setState = this.setState.bind(this);\r\n    this.timeCounter = 0;\r\n    this.names = [];\r\n    this.state = {\r\n      timeCounter: 0,\r\n      response: false\r\n    }\r\n   }\r\n\r\n  async componentDidMount() {\r\n \r\n    const socket = socketIOClient();\r\n    socket.on('news', (data: MyData) => {\r\n      console.log (\"something received: \", data);\r\n      let jsonRcvd: myJson[] = JSON.parse (data.something);\r\n      //  this.setState (names: []});\r\n      //this.state.names = [];\r\n      for (let i = 0; i < jsonRcvd.length; i++) {\r\n        let oName = {} as OMod;\r\n        oName.id = i;\r\n        oName.GivenName = jsonRcvd[i].GivenName;\r\n        oName.FamilyName = jsonRcvd[i].FamilyName;\r\n        this.names.push(oName);\r\n      }\r\n      //this.state.names = JSON.parse (data.something);\r\n      //console.log (\"state.names[1]: \", this.state.names[1]);\r\n      socket.close ();\r\n      window.clearInterval (timerId);\r\n    \r\n      this.setState(prevState => ({\r\n      ...prevState,\r\n      response: true\r\n    }))\r\n    \r\n      //this.setState({ response: true });\r\n    });\r\n  }\r\n\r\n  handleSubmit(event:React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    console.log(\"load button\");\r\n    console.log (\"props: \", this.props);\r\n    console.log (\"state: \", this.state);\r\n    let formData = new FormData();\r\n    let fname = this.fileInput.current.files[0].name;\r\n    console.log ('fname: ', fname);\r\n    \r\n    formData.append(\"avatar\", this.fileInput.current.files[0]);\r\n    formData.append(\"clearDB\", this.props.bClearDB.toString());\r\n    formData.append(\"clearCats\", this.props.bClearCats.toString());\r\n    formData.append(\"csv\", fname.indexOf(\"csv\") > 0 ? 'true' : 'false');\r\n    //initSocket();\r\n    \r\n    timerId = window.setInterval (() => {\r\n      // function called\r\n      this.timeCounter++;\r\n      this.setState ({timeCounter: this.timeCounter});\r\n    }, 1000);\r\n\r\n    var opts = {\r\n      method: \"PUT\",\r\n      body: formData\r\n    };\r\n    fetch(\"/contacts/import\", opts).then(function (response) {\r\n      return (response.text());\r\n    }).then(function (string) {\r\n      console.log(\"res: \", string);\r\n      //        $(\"body\").html(string);\r\n      //location.reload(); // essential to refresh the page\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Upload file:\r\n          <input style={{width: \"100%\"}} accept=\".csv, .CSV, .vcf, .VCF\" type=\"file\" ref={this.fileInput} />\r\n        </label>\r\n        <br /><br />\r\n        <button type=\"submit\"><strong>Submit</strong></button>\r\n        <div>\r\n        {this.state.response\r\n          ? <div><p>Loading done.\r\n            Near-duplicates:</p>{MyTable (this.names)}</div>\r\n          : <p>Loading {this.state.timeCounter}</p>\r\n        }</div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Load extends React.Component<{}, {bClearDB: boolean, bClearCats: boolean, date: string}> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.state = {\r\n      bClearCats: false,\r\n      bClearDB: false,\r\n      date: ''\r\n    };\r\n\r\n//    this.handleClearDB = this.handleClearDB.bind(this);\r\n//    this.handleClearCats = this.handleClearCats.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  // static async getInitialProps() {\r\n  // }\r\n\r\n  // handleClearDB () {\r\n  //   console.log (\"clear DB\");\r\n  //   this.setState ({bClearDB: !bClearDB});\r\n  // }\r\n\r\n  // handleClearCats () {\r\n  //   console.log (\"clear cats\");\r\n  //   this.setState ({bClearCats: !bClearCats});\r\n  // }\r\n  async componentDidMount () {\r\n   try {\r\n      console.log (\"CDM before gLD call\");\r\n      const date = await getLoadDate();\r\n      console.log(\"CDM:\", date);\r\n      this.setState({ // eslint-disable-line\r\n        date: date\r\n      });\r\n      //bCatSelected = false;\r\n    } catch (err) {\r\n//      this.setState({error: err.message || err.toString() }); // eslint-disable-line\r\n    }\r\n  }\r\n  private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    console.log (\"Input change\", event.target.name, event.target.type, event.target.checked);\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      [event.target.name]: event.target.checked\r\n    }))\r\n  }\r\n  \r\n  //handleInputChange(event) {\r\n    //    const target = event.target;\r\n    //    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    //    let name: string = event.target.name;\r\n    //    let bChecked: boolean = event.target.checked;\r\n            //this.setState({\r\n              //  [name]: bChecked\r\n              //});\r\n\r\n  render() {\r\n    //const { list } = this.props;\r\n    let buttonStyle = {width: \"16px\", height: \"16px\"};\r\n\r\n    return (\r\n      <strong>\r\n      <div style={{  margin: '0 20px' }}>\r\n        {Header ()}\r\n        <style>{`\r\n      body {\r\n        background-image: url(\"/static/oriental.png\");\r\n      }\r\n      `}</style>\r\n        <br /><br />\r\n        <h2 style={{ textAlign: 'left' }}>Load contacts (last loaded {this.state.date})</h2>\r\n        <form>\r\n         <label>Empty the database before loading: <input\r\n            style={buttonStyle}\r\n            name=\"bClearDB\"\r\n            type=\"checkbox\"\r\n            checked={this.state.bClearDB}\r\n            onChange={this.handleInputChange} />\r\n         </label>\r\n         <br /><br />\r\n         <label>Rebuild the categories file: <input\r\n            style={buttonStyle}\r\n            name=\"bClearCats\"\r\n            type=\"checkbox\"\r\n            checked={this.state.bClearCats}\r\n            onChange={this.handleInputChange} />\r\n         </label>\r\n         <br /><br />\r\n        </form>\r\n        <FileInput bClearDB={this.state.bClearDB} bClearCats={this.state.bClearCats} />\r\n        </div>\r\n        </strong>\r\n    );\r\n  }\r\n}\r\n\r\n// export {LoadPage, getCats;\r\n","import * as React from 'react';\r\nimport { getList, getContacts } from './public';\r\n//import ComboSelect from 'react-combo-select';\r\n//require('../node_modules/react-combo-select/style.css');\r\nimport Header from './components/Header';\r\n//import { O_CREAT } from 'constants';\r\n//import PropTypes from 'prop-types';\r\n//import {Table, Thead, Th, Tr,Td} from 'reactable';\r\nimport ReactDataGrid from 'react-data-grid';\r\n//import {ModalContainer, ModalDialog} from 'react-modal-dialog';\r\n\r\n//import PropTypes from 'prop-types';\r\n//import { isNullOrUndefined } from 'util';\r\n\r\n\r\n//const NUM_ANDS = 4;\r\ntype OMod = {\r\n  id: number,\r\n  GivenName: string,\r\n  FamilyName: string,\r\n  \"E-mail1-Value\": string,\r\n  'Phone1-Value': string,\r\n  Photo1: string,\r\n  FC_ID1: string,\r\n  FC_ID2: string,\r\n  url: string\r\n};\r\n\r\ntype OCat = {\r\n  sIsSubCatOf: string,\r\n  sThisCat: string,\r\n  key: number\r\n};\r\n\r\ntype CSRState = {\r\n  list: OCat[],\r\n  loading: boolean,\r\n  sAddCat: string[],\r\n  aoFound: OSearch[],\r\n  iCounter: number,\r\n  iPersonShow: number\r\n};  \r\n\r\nclass OSearch {\r\n  sSearch: string = '';\r\n  asSelect: string[] = [];\r\n  bNext: boolean = false;\r\n  bAnd: boolean = false;\r\n  bSearch: boolean = true;\r\n  sSubCatOf: string = '';\r\n  iCatSearches: number = 0;\r\n  bComplete: boolean = false;\r\n  aoCatsList: OCat[] = [];\r\n  sCat: string[] = [];\r\n  bAllowMult: boolean = false;\r\n  iCatSearchesMax: number = 0;\r\n};\r\n\r\n// The gray background\r\nconst backStyle = {\r\n  //        position: 'fixed',  // typescript doesn't like this\r\n  //top: 0,\r\n  bottom: 0,\r\n  left: 20,\r\n  right: 0,\r\n  maxWidth: 600,\r\n  maxHeight: 350,\r\n  backgroundColor: 'rgba(0,0,0,0.3)',\r\n  padding: 50\r\n};\r\n\r\n// The modal \"window\"\r\nconst modalStyle = {\r\n  backgroundColor: '#fff',\r\n  borderRadius: 5,\r\n  maxWidth: 500,\r\n  minHeight: 200,\r\n  margin: '0 auto',\r\n  padding: 30\r\n};\r\n\r\nconst tableStyle = {\r\n  margin: 20,\r\n  verticalAlign: 'top',\r\n  display: 'inline-block'\r\n};\r\nconst boxStyle = {\r\n  margin: 20,\r\n  verticalAlign: 'top',\r\n  display: 'inline-block'\r\n};\r\n    \r\nlet aiCatsSelected: number[] = [];\r\nlet aoSearch: OSearch[] = [];\r\n//aoSearch.push (new OSearch ());\r\naoSearch[0] = new OSearch ();\r\naoSearch[0].bNext = true;\r\nconsole.log (\"aoS original length: \", aoSearch.length);\r\nlet bRefining: boolean;\r\n//let sSubCatOf: string;\r\nlet aoFoundNames: OMod[] = [];\r\n\r\nlet iTotalRows = 0;   // easy way, rather than checking aoSearch\r\n//let iPersonShow = -1;\r\n\r\nconst columns = [\r\n  { key: 'GivenName', name: 'GivenName' },\r\n  { key: 'FamilyName', name: 'FamilyName'}\r\n];\r\n\r\n\r\nexport class Search extends React.Component<{}, CSRState> {\r\n  state: CSRState;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      loading: true,\r\n      sAddCat: [],\r\n      aoFound: [],\r\n      iCounter: 0,\r\n      iPersonShow: -1\r\n    }\r\n    console.log (\"constructor aoFound: \", this.state.aoFound);\r\n    this.nextButton = this.nextButton.bind(this);\r\n    this.andButton = this.andButton.bind(this);\r\n    this.searchButton = this.searchButton.bind(this);\r\n    aiCatsSelected[0] = 0;\r\n  }\r\n   \r\n  onClose () {\r\n    return;\r\n  }\r\n\r\n//          {this.props.children}\r\n\r\n  ModalBox (iPerson: number) {\r\n    return (\r\n      <div className=\"backdrop\" style={backStyle}>\r\n      <div className=\"modal\" style={modalStyle}>\r\n          <div><p>{aoFoundNames[iPerson].GivenName} {aoFoundNames[iPerson].FamilyName}</p></div>\r\n          <p>{aoFoundNames[iPerson].FC_ID1 !== undefined ? <a target=\"_blank\" href={aoFoundNames[iPerson].url}><strong>FullContact</strong></a> : ''}</p>\r\n          <p>{aoFoundNames[iPerson]['Phone1-Value']}&nbsp;&nbsp;{aoFoundNames[iPerson]['E-mail1-Value']}</p><br></br>\r\n          <img alt=\"\" style={{height: 120}} src={aoFoundNames[iPerson].Photo1}/>\r\n          <div className=\"footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  rowSel (index: number) {\r\n    console.log (\"Row: \", index);\r\n    this.setState ({iPersonShow: index});\r\n  }\r\n\r\n  handleClick () {\r\n    return;\r\n  }\r\n\r\n  handleClose () {\r\n    this.setState ({iPersonShow: -1});\r\n    return;\r\n  }\r\n\r\n  NameTable (tableData: { GivenName: string, FamilyName: string }[]) {\r\n    //console.log(\"Hello World\");\r\n    return (<ReactDataGrid\r\n      minWidth = {500}\r\n      columns={columns}\r\n      rowGetter={i => tableData[i]}\r\n      rowsCount={tableData.length}\r\n      enableCellSelect={true}\r\n      onCellSelected={i => this.rowSel(i.rowIdx)}\r\n      minHeight={420} />);\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    try {\r\n      iTotalRows = 1;\r\n      bRefining = false;\r\n      console.log (\"CDM before gL call\");\r\n      const list = await getList();\r\n      console.log(\"CDM:\", list);\r\n      this.setState({ // eslint-disable-line\r\n        list: list,\r\n        loading: false,\r\n      });\r\n      //bCatSelected = false;\r\n    } catch (err) {\r\n//      this.setState({ loading: false, error: err.message || err.toString() }); // eslint-disable-line\r\n      this.setState({ loading: false }); // eslint-disable-line\r\n    }\r\n  }\r\n\r\n  async searchButton () {\r\n    console.log (\"Search button\");\r\n    bRefining = true;\r\n    let asSearch: string[] = [];  // api is written to use array of strings\r\n    for (let i = 0; i < iTotalRows; i++) {\r\n      asSearch[i] = aoSearch[i].sSearch;\r\n    }\r\n    let aoContacts = await getContacts(asSearch);\r\n    console.log (\"aoFound: \", aoContacts.aoFound);\r\n    this.setState ({aoFound: aoContacts.aoFound});      // same name in backend!\r\n      for (let i = 0; i < aoContacts.aoFound.length; i++) {\r\n        let oName = {} as OMod;\r\n        oName.id = i;\r\n        oName = aoContacts.aoFound[i];\r\n        aoFoundNames.push(oName);\r\n      }\r\n      console.log (aoFoundNames);\r\n     return;\r\n  }\r\n\r\n  // Add category to search.  Selection is in e.target.options.  iRow is the search row\r\n  catAddSelect = (e: React.ChangeEvent<HTMLSelectElement>, iRow: number) => {\r\n    console.log (\"Need to debug this\");\r\n    aoSearch[iRow].sCat = [].filter.call(e.target.options, (o: any) => o.selected).map((o: any) => o.value);\r\n    console.log (\"catAddSelect: \", aoSearch[iRow].sCat);\r\n  }\r\n\r\n  andButton = (param: number) => () => {\r\n    aoSearch[param].bAnd = false;\r\n    aoSearch[param].bSearch = false;\r\n    console.log ('AND iCatSearches: ', aoSearch[param].iCatSearches);\r\n    iTotalRows++;\r\n    aoSearch[iTotalRows - 1] = new OSearch ();\r\n    aoSearch[iTotalRows - 1].bNext = true;\r\n    // eslint-disable-next-line\r\n    this.setState ({iCounter: this.state.iCounter++});    // just to cause refresh\r\n  }\r\n  \r\n  nextButton = (param: number) => () => {\r\n    // param is the argument you passed to the function\r\n    // e is the event object that returned\r\n    console.log (\"next button: \", param, aoSearch[param].iCatSearches);\r\n    aoSearch[param].iCatSearches++;\r\n    if (aoSearch[param].sSearch !== \"\") {\r\n      aoSearch[param].sSearch += ' _ ';\r\n    }\r\n    if (aoSearch[param].iCatSearches < 3  && aoSearch[param].sCat.length < 2) {     // < 2 ==> not OR\r\n      console.log ('sCat: ', aoSearch[param].sCat);\r\n      console.log ('sCat length: ', aoSearch[param].sCat.length);\r\n      aoSearch[param].bComplete = false;\r\n      if (aoSearch[param].iCatSearches > 0) {\r\n        aoSearch[param].bAnd = true;\r\n      }\r\n    }\r\n    else {\r\n      aoSearch[iTotalRows - 1].bComplete = true;\r\n      aoSearch[iTotalRows - 1].bAnd = false;\r\n      aoSearch[iTotalRows - 1].bNext = false;\r\n      aoSearch[iTotalRows - 1].bSearch = false;\r\n      iTotalRows++;\r\n      aoSearch[iTotalRows - 1] = new OSearch ();\r\n      aoSearch[iTotalRows - 1].bNext = true;\r\n    }\r\n    aoSearch[param].sSearch += aoSearch[param].sCat.join (' OR '); // only puts in OR if there's more than one item in sCat?\r\n    console.log (\"searchString: \", aoSearch[param].sSearch);\r\n    aoSearch[param].sSubCatOf = aoSearch[param].sCat[0];\r\n    console.log ('asSubCatOf: ', aoSearch[param].sCat[0]);\r\n    //sSubCatOf = this.sCat[0];          // deal with the fact that this is an array\r\n    //aiCatsSelected[param]++;\r\n    if (bRefining) {\r\n      this.searchButton ();      // fake it\r\n    }\r\n    else {\r\n      // eslint-disable-next-line\r\n      this.setState ({iCounter: this.state.iCounter++});    // just to cause refresh\r\n    }\r\n  }\r\n\r\n  csr(state: any) {\r\n    for (let iRow = 0; iRow < iTotalRows; iRow++) {\r\n      console.log('iTR, iRow, iCatSearches: ', iTotalRows, iRow, aoSearch[iRow].iCatSearches);\r\n      aoSearch[iRow].aoCatsList = [];\r\n      if (aoSearch[iRow].iCatSearches < 3) {\r\n        console.log('aoS[iR].sSCO: ', aoSearch[iRow].sSubCatOf);\r\n        // work out select elements\r\n        let j = 0;\r\n        for (let i = 0; i < state.list.aoCats.length; i++) {\r\n          if (state.list.aoCats[i].sIsSubCatOf === aoSearch[iRow].sSubCatOf) {\r\n            aoSearch[iRow].aoCatsList.push(state.list.aoCats[i]);\r\n            aoSearch[iRow].aoCatsList[j].key = j++;\r\n          }\r\n        }\r\n        aoSearch[iRow].aoCatsList.sort ((a: OCat, b:OCat) => (a.sThisCat > b.sThisCat) ? 1 : -1);\r\n      }\r\n      aoSearch[iRow].bAllowMult = aoSearch[iRow].sSubCatOf === '' ? false : true;\r\n      if (aoSearch[iRow].aoCatsList.length < 2) {   // can't search a list of 1\r\n        console.log ('short row: ', iRow, aoSearch[iRow].aoCatsList.length);\r\n        aoSearch[iRow].bComplete = true; \r\n        aoSearch[iRow].bNext = false;\r\n        aoSearch[iRow].iCatSearchesMax = 2;\r\n      }\r\n    }\r\n\r\n    let aoFoundPeople: OMod[] = [];\r\n    console.log (\"csr aoFound 1: \", state.aoFound);\r\n//    if(state.aoFound !== undefined) {\r\n    if(state.aoFound !== []) {\r\n      console.log (\"csr aoFound 2: \", state.aoFound);\r\n      aoFoundPeople = state.aoFound;\r\n      aoFoundPeople.sort((a: OMod, b: OMod) => (a.FamilyName > b.FamilyName) ? 1 :\r\n       (b.FamilyName > a.FamilyName) ? -1 : \r\n       ((a.GivenName > b.GivenName) ? 1 : (b.GivenName > a.GivenName) ? -1 : 0));\r\n      //console.log (\"aoFound\", state.aoFound.aoFound[0].FamilyName);\r\n    }\r\n    else {\r\n      aoFoundPeople = [];\r\n    }\r\n    //console.log (\"aoFP: \", aoFoundPeople);\r\n\r\n//    this.aoFound.map((x, y) => console.log (x.FamilyName));\r\n\r\n    for (let i = 0; i < aoFoundPeople.length; i++) {\r\n      aoFoundPeople[i].url = `https://app.fullcontact.com/contacts/${aoFoundPeople[i].FC_ID1}/${aoFoundPeople[i].FC_ID2}`;\r\n//      console.log ('URL: ', aoFoundPeople[i].url);\r\n    }\r\n    console.log ('aoSearch len', aoSearch.length);\r\n    console.log ('aoCatsList: ', aoSearch[0].aoCatsList);\r\n    return (\r\n    <div style={{ textAlign: 'center', margin: '0 20px' }}>\r\n      {Header ()}\r\n      <h2>Search page</h2>\r\n      <strong>\r\n        {aoSearch.map((oSrch,index1) => <div key={index1}>\r\n          <div><p>{oSrch.sSearch}</p></div>\r\n          {oSrch.bComplete ? '' :\r\n            <div><select size={10} multiple={oSrch.bAllowMult ? true : false} \r\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => this.catAddSelect(e, index1)}>\r\n            {oSrch.aoCatsList.map((value2, index2) => <option key = {index2}> {value2.sThisCat} </option>)}\r\n          </select></div>}\r\n          <div>{oSrch.bNext ? <button onClick={this.nextButton(index1)}>Next</button> : ''}</div>\r\n          <div>{oSrch.bAnd ? <button onClick={this.andButton(index1)}>AND</button> : ''}</div>\r\n          <div>{oSrch.bSearch ? <button onClick={this.searchButton}>Search</button> : ''}</div>\r\n          </div>)}\r\n          <br></br>\r\n            <div style={tableStyle}>{aoFoundPeople.length > 0 ? this.NameTable  (aoFoundPeople) : ''}</div>\r\n            <div style={boxStyle}>{this.state.iPersonShow >= 0 ? this.ModalBox (this.state.iPersonShow) : ''}</div>\r\n          <div>\r\n      </div>\r\n    </strong>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n  render() {\r\n    console.log (`render CSRWD: |`, {...this.state});\r\n    // state has members as above - list is null on the first call, is {aoCats[]} on the second call\r\n    // and loading true on the first call, false on the second\r\n    // return <CSR {...this.props} {...this.state} />;\r\n   return (<div> {this.csr ({...this.state})} </div>);\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport {Load} from './load';\nimport {Search} from './search';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n  <Switch>\n    <Route exact path='/' component={App}/>\n    <Route path='/load' component={Load}/>\n    <Route path='/search' component={Search}/>\n  </Switch>\n  </BrowserRouter>\n), document.getElementById('root')\n);\n\n//    <App />\n\n//const bodyStyle = {\n//  backgroundImage: {bodyBkgd}\n//};\n//      {document.body.style.backgroundImage = bodyBkgd}\n\n// function Body () {\n//     return (\n//       <div>\n//         <App />\n//       </div>\n//     );\n// }\n\n// ReactDOM.render(\n//   <Body />,\n//   document.getElementById('root') as HTMLElement\n// );\n\nserviceWorker.unregister();\n"],"sourceRoot":""}